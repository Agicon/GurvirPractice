"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/explicit-function-return-type */
var http = require("http");
var https = require("https");
var WebSocket = require("ws");
var chalk = require("chalk");
var path_1 = require("path");
var http_server_1 = require("http-server");
var convertJSON_1 = require("../common/convertJSON");
var applyRequestSniffer_1 = require("./sniffer/applyRequestSniffer");
var applyServerSniffer_1 = require("./sniffer/applyServerSniffer");
var prepare = function (HTTP, HTTPS) {
    var enabled = false;
    var listeners = [];
    var sniffer = function (info) {
        if (!enabled)
            return;
        listeners.forEach(function (listener) { return listener(info); });
    };
    HTTP.request = applyRequestSniffer_1.default(http.request, sniffer, false);
    HTTPS.request = applyRequestSniffer_1.default(https.request, sniffer, false);
    HTTP.get = applyRequestSniffer_1.default(http.get, sniffer, false);
    HTTPS.get = applyRequestSniffer_1.default(https.get, sniffer, false);
    var createHTTPServer = applyServerSniffer_1.default(http, sniffer, false);
    var createHTTPSServer = applyServerSniffer_1.default(https, sniffer, false);
    HTTP.createServer = createHTTPServer;
    HTTPS.createServer = createHTTPSServer;
    return function (_a) {
        var port = _a.port, _b = _a.secret, secret = _b === void 0 ? '' : _b, _c = _a.debug, debug = _c === void 0 ? false : _c;
        console.log(chalk.greenBright("initiate Echo UI on port: " + port + ", and websocket on port: " + (+port + 1)));
        var wss = new WebSocket.Server({ port: +port + 1 });
        listeners.push(function (info) {
            if (debug) {
                console.log('call ws listener');
            }
            wss.clients.forEach(function (client) {
                if (client.readyState === WebSocket.OPEN) {
                    client.send(convertJSON_1.default(info), function (err) {
                        if (err) {
                            console.log(err);
                        }
                    });
                }
            });
        });
        wss.on('connection', function (ws) {
            if (debug)
                console.log('ws connection');
            ws.on('message', function (message) {
                if (debug) {
                    console.log('ws got message', message);
                }
                if (message === secret) {
                    if (debug) {
                        console.log('ws auth true');
                    }
                    ws.send('{"auth": true}');
                    enabled = true;
                }
                else {
                    if (debug) {
                        console.log('ws auth false');
                    }
                    ws.send('{"auth": false}', function () {
                        enabled = false;
                    });
                }
                ws.on('close', function () {
                    enabled = false;
                });
            });
        });
        var server = http_server_1.createServer({ root: path_1.resolve(__dirname, '..') });
        server.listen(port);
        return wss;
    };
};
exports.start = prepare(http, https);
exports.default = exports.start;
//# sourceMappingURL=index.js.map